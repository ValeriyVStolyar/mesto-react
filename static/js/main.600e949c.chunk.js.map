{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","rel","CurrentUserContext","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","aria-label","onClick","src","link","alt","name","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","Date","Footer","PopupWithForm","title","isOpen","onClose","children","save","onSubmit","action","method","ImagePopup","api","address","token","groupID","this","_address","_token","_groupID","fetch","headers","authorization","then","_checkResponse","formData","body","JSON","stringify","cardId","res","ok","json","Promise","reject","status","statusText","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","React","useEffect","e","preventDefault","id","placeholder","value","minLength","maxLength","required","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarDom","useRef","current","ref","AddPlacePopup","setPlace","setLink","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getUserInfo","result","catch","err","console","log","getCards","Provider","changeLikeCardStatus","newCard","state","c","deleteLikeCard","deleteCard","filter","item","user","setUserInfo","setUserAvatar","addCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.600e949c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <a href=\"#\" rel=\"noopener\" className=\"logo\"></a>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { createContext } from 'react';\n\nconst CurrentUserContext = createContext();\n\nexport default CurrentUserContext;\n","import React, { useContext } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n\n  const currentUser = useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n    `button button_type_remove ${isOwn ? 'button_type_remove' : 'button_disabled'}`\n  );\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (\n    `button button_type_like ${isLiked ? 'button_clicked' : ''}`\n  );\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return (\n    <article className=\"place\">\n      <button type=\"button\" aria-label=\"Удалить\"\n        className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n      <img src={card.link} alt={`Картинка места с названием\n      ${card.name}`} className=\"place__image\" onClick={handleClick} />\n      <div className=\"place__list-sights\">\n        <h2 className=\"place__title\">{card.name}</h2>\n        <div className=\"place__like-conteiner\">\n          <button type=\"button\" aria-label=\"Лайкнуть\"\n            className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n          <p className=\"place__text\">{card.likes.length}</p>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default Card;\n","import React, { useContext } from 'react';\nimport Card from './Card';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick,\n  cards, onCardLike, onCardDelete }) {\n\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__block\">\n          <img src={currentUser.avatar} alt=\"Аватар\" className=\"profile__image\" />\n          <button type=\"button\" aria-label=\"Открыть попап редактирования аватара\"\n            className=\"button button_type_edit-avatar\" onClick={onEditAvatar}></button>\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__title\">{currentUser.name}</h1>\n          <button type=\"button\" aria-label=\"Открыть попап\"\n            className=\"button button_type_edit\" onClick={onEditProfile}>\n          </button>\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\n        </div>\n        <button type=\"button\" aria-label=\"Добавить карточку\"\n          className=\"button button_type_add-card\" onClick={onAddPlace}>\n        </button>\n      </section>\n      <section aria-label=\"Фотографии мест\" className=\"places\">\n        {cards.map(card => (\n          <Card\n            card={card}\n            onCardClick={onCardClick}\n            onCardLike={onCardLike}\n            onCardDelete={onCardDelete}\n            key={card._id}\n          />\n        )\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\n      {/* <p className=\"footer__copyright\">{`(&copy;) ${date} Mesto Russia`}</p> */}\n    </footer>\n  );\n}\n\nconst date = new Date;\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm({ name, title, isOpen, onClose, children, save, onSubmit }) {\n\n  return (\n    <article className={`popup popup_type_${name} ${isOpen && \"popup_opened\"}`}>\n      <form action=\"#\" method=\"POST\" name={`Input-list-${name}`}\n        className=\"popup__container popup__validate\" onSubmit={onSubmit}>\n        <button type=\"button\" aria-label=\"Закрыть попап\"\n          className=\"button button_type_close\" onClick={onClose}></button>\n        <h2 className=\"popup__title\">{title}</h2>\n        {children}\n        <button type=\"submit\" aria-label=\"Сохранить\"\n          className=\"button button_type_submit\">{save}</button>\n      </form>\n    </article>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n\n  return (\n    <article className={`popup popup_place_picture  ${card.link && \"popup_opened\"}`}>\n      <form action=\"#\" method=\"POST\" name=\"Input-list\" className=\"popup__container popup__container_size_large\">\n        <button type=\"button\" aria-label=\"Закрыть попап\" className=\"button button_type_close\" onClick={onClose}></button>\n        <img src={card.link} alt={`Картинка места с названием ${card.name}`} className=\"popup__image\" />\n        <h2 className=\"popup__title popup__title_size_small\">{card.name}</h2>\n      </form>\n    </article>\n  );\n}\n\nexport default ImagePopup;\n","class Api {\n  constructor({ address, token, groupID }) {\n    this._address = address;\n    this._token = token;\n    this._groupID = groupID;\n  }\n\n  getUserInfo() {\n    return fetch(`${this._address}/v1/${this._groupID}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._address}/v1/${this._groupID}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  setUserInfo(formData) {\n    return fetch(`${this._address}/v1/${this._groupID}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: formData.name,\n        about: formData.about\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  addCard(formData) {\n    return fetch(`${this._address}/v1/${this._groupID}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: formData.name,\n        link: formData.link\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._address}/v1/${this._groupID}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId) {\n    return fetch(`${this._address}/v1/${this._groupID}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  deleteLikeCard(cardId) {\n    return fetch(`${this._address}/v1/${this._groupID}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  setUserAvatar(formData) {\n    return fetch(`${this._address}/v1/${this._groupID}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: formData.avatar\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\n    }\n    return res.json();\n  }\n}\n\nconst config = {\n  address: 'https://mesto.nomoreparties.co',\n  token: '83427565-56e8-48c1-b66e-268601726ef3',\n  groupID: 'cohort-24'\n}\n\nconst api = new Api(config);\nexport default api;\n\n","import React, { useState, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const currentUser = useContext(CurrentUserContext);\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile\"\n      title=\"редактировать профиль\"\n      isOpen={isOpen}\n      onClose={onClose}\n      save=\"Сохранить\"\n      onSubmit={handleSubmit}>\n      <input id=\"popup__name\" type=\"text\" name=\"name\" placeholder=\"Имя\"\n        className=\"popup__input popup__input_type_name\" value={name || ''}\n        minLength=\"2\" maxLength=\"40\" required onChange={handleChangeName} />\n      <span className=\"popup__input-error popup__name-error\"></span>\n      <input id=\"popup__job\" type=\"text\" name=\"job\" placeholder=\"О себе\"\n        className=\"popup__input popup__input_type_job\" value={description || ''}\n        minLength=\"2\" maxLength=\"200\" required onChange={handleChangeDescription} />\n      <span className=\"popup__input-error popup__job-error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","import React, { useState, useContext, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  const currentUser = useContext(CurrentUserContext);\n  const avatarDom = React.useRef();\n\n  React.useEffect(() => {\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarDom.current.value /* Значение инпута, полученное с помощью рефа */,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"avatar\"\n      title=\"обновить аватар\"\n      isOpen={isOpen}\n      onClose={onClose}\n      save=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input id=\"popup__avatar\" type=\"url\" name=\"avatar\" placeholder=\"https://somewebsite.com/someimage.jpg\"\n        className=\"popup__input popup__input_type_avatar\" required\n        ref={avatarDom} />\n      <span className=\"popup__input-error popup__avatar-error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\n  const [name, setPlace] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  function handleChangePlace(e) {\n    setPlace(e.target.value);\n  }\n\n  function handleChangeLink(e) {\n    setLink(e.target.value);\n  }\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setPlace('');\n    setLink('');\n  }, [isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onAddPlace({\n      name,\n      link,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"places\"\n      title=\"новое место\"\n      isOpen={isOpen}\n      onClose={onClose}\n      save=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input id=\"popup__place\" type=\"text\" name=\"place\" placeholder=\"Название\" value={name || ''}\n        className=\"popup__input popup__input_type_place\" minLength=\"2\" maxLength=\"30\" required\n        onChange={handleChangePlace} />\n      <span className=\"popup__input-error popup__place-error\"></span>\n      <input id=\"popup__link\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" value={link || ''}\n        className=\"popup__input popup__input_type_link\" required\n        onChange={handleChangeLink} />\n      <span className=\"popup__input-error popup__link-error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","import React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({ name: '', link: '' });\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({ name: '', link: '' });\n  }\n\n  useEffect(() => {\n    api.getUserInfo()\n      .then((result) => {\n        setCurrentUser(result);\n      })\n      .catch(err => console.log('Ошибка. Запрос на получение инфо о пользователе не выполнен.'));\n  }, [])\n\n  useEffect(() => {\n    api.getCards()\n      .then((result) => {\n        setCards(result);\n      })\n      .catch(err => console.log('Ошибка при получании карточек'));\n  }, [])\n\n  const handleUpdateUser = (user) => {\n    api.setUserInfo(user)\n      .then((result) => {\n        setCurrentUser(result);\n        closeAllPopups();\n      })\n      .catch(err => console.log('Ошибка. Запрос на обновление профиля не выполнен.'));\n  }\n\n  const handleUpdateAvatar = (user) => {\n    api.setUserAvatar(user)\n      .then((result) => {\n        setCurrentUser(result);\n        closeAllPopups();\n      })\n      .catch(err => console.log('Ошибка. Запрос на обновление профиля не выполнен.'));\n  }\n\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => {\n          return state.map((c) => {\n            return c._id === card._id ? newCard : c\n          })\n        });\n      })\n      .catch(err => console.log('Ошибка. Запрос на покраску лайка не выполнен.'));\n\n    api.deleteLikeCard(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(err => console.log('Ошибка. Запрос на уменьшение лайка не выполнен.'));\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        console.log()\n        setCards(cards.filter(item =>\n          item._id !== card._id)\n        )\n      })\n      .catch(err => console.log('Ошибка. Запрос на удаление карточки не выполнен.'));\n  }\n\n  const handleAddPlaceSubmit = (newCard) => {\n    api.addCard(newCard)\n      .then((result) => {\n        setCards([result, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log('Ошибка. Запрос на добавление карточки не выполнен.'));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n        <PopupWithForm\n          name=\"submition\"\n          title=\"вы уверены?\"\n          save=\"да\"\n        >\n        </PopupWithForm>\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}